// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./data.db"
}

model MasterDocuments {
  id                  Int           @id       @default(autoincrement())
  publicId            String        @default(uuid())
  documentPath        String        @default("")
  documentDownload    String        @default("")  

  type                String        @default("")
  use                 String        @default("")
  gameReference       DataUserGame?
}

model MasterSubscriptions {
  id              Int     @id @default(autoincrement())
  name            String  @unique
  description     String
  users           DataUserGame[]
}

model MasterLevels {
  id              Int    @id @default(autoincrement())
  name            String @unique
  description     String
  users           DataUserGame[]
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  lastname String
  password String
  email    String 
  username String 

  coin Int @default(3)

  createAt     DateTime  @default(now())
  updateAt     DateTime  @updatedAt
  last_session DateTime?

  rol String @default("USER")

  // relations
  dataUserGame    DataUserGame[]
}

model Session {
  id Int @id @default(autoincrement())

  startSession DateTime
  endSession   DateTime?

  token String

  dataId        Int
  userReference DataUserGame @relation(fields: [dataId], references: [id])
}

model Notification {
  id                Int         @id           @default(autoincrement())
  userId            Int
  dataReference     DataUserGame        @relation(fields: [userId], references: [id])
  content           String
  redirect          String      @default("")
  type              String
  by                String
  read              Boolean     @default(false)

  createAt          DateTime  @default(now())
}

model DataUserGame {
  id                      Int       @id     @default(autoincrement())
  coin                    Int

  languaje                String    @default("es")

  userId                  Int
  userReference           User      @relation(fields: [userId], references: [id])

  GameId                  Int
  dameReference           Game      @relation(fields: [GameId], references: [id])

  subscriptionId          Int?
  subscriptionReference   MasterSubscriptions? @relation(fields: [subscriptionId], references: [id])

  levelId                 Int?
  levelReference          MasterLevels? @relation(fields: [levelId], references: [id])

  notifications           Notification[]
  sessions                Session[]

  profilePhotoId          Int?      @unique
  profilePhotoReference   MasterDocuments?    @relation(fields: [profilePhotoId], references: [id])  
}

model Game {
  id              Int       @id     @default(autoincrement())
  name            String    @unique
  devices         String    @default("mobile")
  dataUserGame    DataUserGame[]
}
